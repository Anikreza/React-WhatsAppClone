{"version":3,"sources":["firebase.js","StateProvider.js","Chatbar.js","Sidebar.js","as.jpg","aa.jpg","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","storage","FieldValue","serverTimestamp","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chatbar","addChat","name","id","useState","messages","setMessages","seed","setSeed","user","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","room","displayName","add","email","className","to","Avatar","src","message","Sidebar","rooms","setRooms","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","Chat","useRef","roomId","useParams","roomName","setRoomName","media","setMedia","mediaUrl","setMediaUrl","setError","setProgress","input","setInput","storageRef","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","timestamp","image","ref","filehandler","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","moment","length","toDate","startOf","fromNow","htmlFor","AttachFile","style","cursor","onChange","display","b","width","height","emoti","format","cleanOnEnter","onEnter","borderRadius","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","catch","error","alert","App","uid","set","token","refreshToken","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0YAYQA,EAAcC,IAASC,cAVR,CACnBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAIXC,EAAKV,EAAYW,YACjBC,EAAOZ,EAAYY,OACnBC,EAAW,IAAIZ,IAASW,KAAKE,mBAC7BC,EAAUd,IAASc,UAMVL,GALJT,IAASU,UAAUK,WAAWC,gBAK1BP,G,eCpBJQ,EAAeC,0BAEfC,EAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,SAA1B,OACzB,cAACL,EAAaM,SAAd,CAAuBC,MAAOC,qBAAWL,EAAQC,GAAjD,SACKC,KAIII,EAAgB,kBAAMC,qBAAWV,ICqD/BW,MAtDf,YAAwC,IAAD,EAApBC,EAAoB,EAApBA,QAASC,EAAW,EAAXA,KAAMC,EAAK,EAALA,GAE3B,EAA+BC,mBAAS,KAAxC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA2BV,IAA3B,mBAAQW,EAAR,KAAQA,KA0BX,OA1BG,KAEAC,qBAAU,WACNP,GACCtB,EAAG8B,WAAW,SAASC,IAAIT,GAAIQ,WAAW,YACzCE,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GACpCT,EAAYS,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,gBAGpD,CAACf,IAGDO,qBAAU,WACTF,EAAQW,KAAKC,MAAsB,IAAhBD,KAAKE,aACzB,IAYKpB,EAkBJ,qBAAKqB,QA5BQ,WACX,IAAMC,EAAI,OAACd,QAAD,IAACA,OAAD,EAACA,EAAMe,YACdD,GACC1C,EAAG8B,WAAW,SAASc,IAAI,CACvBvB,KAAMqB,EACNd,KAAMA,EAAKiB,SAuBKC,UAAU,eAApC,SACI,iDAjBJ,cAAC,IAAD,CAAMC,GAAE,iBAAazB,GAArB,SACA,sBAAKwB,UAAU,eAAf,UACO,cAACE,EAAA,EAAD,CAASC,IAAG,oDAA+CvB,EAA/C,UACd,sBAAKoB,UAAS,4BACC,6BAAdlB,EAAKiB,OACS,yBAAdjB,EAAKiB,OACS,yBAAdjB,EAAKiB,OACS,0BAAdjB,EAAKiB,OAAqC,gBAJ3C,UAMG,oCAAOxB,EAAP,aACA,sCAAIG,EAAS,UAAb,aAAI,EAAa0B,mBCgBlBC,EAvDC,WAEZ,MAA2BlC,IAA3B,mBAAQW,EAAR,KAAQA,KACR,GADA,KACwBL,mBAAS,KAAjC,mBAAO6B,EAAP,KAAcC,EAAd,KAoBA,OAhBAxB,qBAAU,WACL,IAAMyB,EAAYtD,EAAG8B,WAAW,SAASG,YAAW,SAAAC,GAAQ,OACzDmB,EAASnB,EAASC,KAAKC,KAAI,SAAAL,GAAG,MAC1B,CACIT,GAAIS,EAAIT,GACRe,KAAMN,EAAIM,eAMtB,OAAO,WACHiB,OAEN,IAGE,sBAAKR,UAAU,UAAf,UACI,sBAAKA,UAAU,iBAAf,UACG,cAACE,EAAA,EAAD,CAAQC,IAAKrB,EAAK2B,WAClB,sBAAKT,UAAU,uBAAf,UACI,cAACU,EAAA,EAAD,UACA,cAAC,IAAD,MAEA,cAACA,EAAA,EAAD,UACA,cAAC,IAAD,MAEA,cAACA,EAAA,EAAD,UACA,cAAC,IAAD,YAIP,qBAAKV,UAAU,iBAAf,SACI,sBAAKA,UAAU,0BAAf,UACK,cAACW,EAAA,EAAD,IACA,uBAAOC,YAAY,mBAAmBC,KAAK,cAGpD,sBAAKb,UAAU,mBAAf,UACA,cAAC,EAAD,CAAS1B,SAAO,IACXgC,EAAMhB,KAAI,SAAAM,GAAI,OACX,cAAC,EAAD,CAAuBpB,GAAIoB,EAAKpB,GAAID,KAAMqB,EAAKL,KAAKhB,MAAtCqB,EAAKpB,c,yBC5DxB,G,MCAA,IDAA,IAA0B,gC,4EEuN1BsC,EApMF,WAEKC,mBAFE,IAAD,IAGjB,EAA6B5C,IAA7B,mBAASW,EAAT,KAASA,KACT,GADA,KAC+BL,mBAAS,KAAxC,mBACQuC,GADR,UACmBC,cAAXD,QACR,EAAgCvC,mBAAS,IAAzC,mBAAOyC,EAAP,KAAiBC,EAAjB,KACA,EAAgC1C,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,KAAnC,mBAAO2C,EAAP,KAAcC,EAAd,KACA,EAAgC5C,mBAAS,IAAzC,mBAAO6C,EAAP,KAAiBC,EAAjB,KACA,EAA0B9C,mBAAS,IAAnC,mBAAc+C,GAAd,WACA,EAAgC/C,mBAAS,GAAzC,mBAAiBgD,GAAjB,WACA,EAA0BhD,mBAAS,IAAnC,mBAAOiD,EAAP,KAAcC,EAAd,KAIA5C,qBAAU,WAER7B,EAAG8B,WAAW,SACXC,IAAI+B,GACJ7B,YAAW,SAACC,GACX+B,EAAY/B,EAASG,OAAOhB,SAGhCrB,EAAG8B,WAAW,SACXC,IAAI+B,GACJhC,WAAW,YACXE,QAAQ,YAAa,OACrBC,YAAW,SAACC,GACXT,EAAYS,EAASC,KAAKC,KAAI,SAACL,GAAD,OAASA,EAAIM,gBAE9C,CAACyB,IAYJjC,qBAAU,WAIJuC,GAEJM,EAAWC,IAAIT,GAAOU,GACpB,iBACA,SAACC,GACC,IAAIC,EAAcD,EAAKE,iBAAmBF,EAAKG,WAAc,IAC7DT,EAAYO,MAEd,SAACG,GACCX,EAASW,KAPb,sBASE,sBAAAC,EAAA,sDAEElF,EAAG8B,WAAW,SAASC,IAAI+B,GAAQhC,WAAW,YAAYc,IAAI,CAC5DuC,UAAW5F,IAASU,UAAUK,WAAWC,kBACzC6E,MAAOhB,EACP/C,KAAI,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAMe,cAEd0B,EAAY,IAPd,8CAWA,CAACD,IAEH,IAAMM,EAAarE,EAAQgF,IAAR,iBAAsBnB,EAAM7C,OAK3CiE,GAAW,uCAAG,WAAOC,GAAP,iBAAAL,EAAA,2DACZM,EAAOD,EAAEE,OAAOC,MAAM,IADV,uBAGZC,EAAS,IAAIC,WAHD,SAKVzB,EAASqB,GALC,OAMhBG,EAAOE,UAAY,WACjBxB,EAAYsB,EAAOG,SAGrBH,EAAOI,cAAcP,GAVL,uBAYhBrB,EAAS,MACTG,EAAS,+BAbO,4CAAH,sDAkCjB,OACE,sBAAKxB,UAAU,OAAf,UACE,sBAAKA,UAAU,cAAf,UACE,cAACE,EAAA,EAAD,CAAQC,IAAKrB,EAAK2B,WAClB,sBAAKT,UAAU,mBAAf,UACE,6BAAKkB,IAEL,8CACgB,IACbgC,IAAM,UAACxE,EAASA,EAASyE,OAAS,UAA5B,iBAAC,EAA+Bd,iBAAhC,aAAC,EAA0Ce,UAC/CC,QAAQ,UACRC,gBAGP,sBAAKtD,UAAU,oBAAf,UACE,cAACU,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,MAEF,cAACD,EAAA,EAAD,UACE,wBAAO6C,QAAQ,QAAf,UACE,cAACC,EAAA,EAAD,CAAYC,MAAO,CAAEC,OAAQ,aAC7B,uBACE7C,KAAK,OACL8C,SAAUnB,GACVhE,GAAG,QACHiF,MAAO,CAAEG,QAAS,eAIxB,cAAClD,EAAA,EAAD,UACE,cAAC,IAAD,YAMC,sBAAKV,UAAS,oBACC,6BAAdlB,EAAKiB,OACS,yBAAdjB,EAAKiB,OACS,yBAAdjB,EAAKiB,OACS,0BAAdjB,EAAKiB,OAAqC,gBAJ3C,UAMC,qBAAKC,UAAS,cACA,6BAAdlB,EAAKiB,OACS,yBAAdjB,EAAKiB,OACS,yBAAdjB,EAAKiB,OACS,0BAAdjB,EAAKiB,OAAqC,UAJ1C,SAMK,qBAAKI,IAAK0D,EAAGC,MAAM,OAAOC,OAAO,YAExCrF,EAASY,KAAI,SAACc,GAAD,aACf,oBACEJ,UAAS,kBACPI,EAAQ7B,OAASO,EAAKe,aAAe,YAFzC,UAMGO,EAAQA,QANX,IAMoB,qBAAKJ,UAAU,QAAQG,IAAKC,EAAQkC,QACtD,uBAAMtC,UAAU,cAAhB,cAAgCI,EAAQ7B,KAAxC,OACA,uBAAMyB,UAAU,QAAhB,cAA0BI,EAAQ4D,MAAlC,OACA,sBAAMhE,UAAU,YAAhB,SACGkD,IAAM,UAACxE,EAAS2D,iBAAV,aAAC,EAAoBe,UAAUa,OAAO,iBAQrD,sBAAKjE,UAAU,cAAf,UACA,cAAC,IAAD,IAEA,cAAC,IAAD,CACA/B,MAAOyD,EACPiC,SAAUhC,EACVuC,cAAY,EACZC,QAzFS,WACPzC,IAEJxE,EAAG8B,WAAW,SAASC,IAAI+B,GAAQhC,WAAW,YAAYc,IAAI,CAC5DM,QAASsB,EACTnD,KAAI,OAAEO,QAAF,IAAEA,OAAF,EAAEA,EAAMe,YACZwC,UAAW5F,IAASU,UAAUK,WAAWC,oBAG3CkE,EAAS,MAiFPf,YAAY,iBACZwD,aAAa,c,iCC3MNC,EACE,WAgBAxG,EAbC,SAACyG,EAAOC,GACpB,OAAOA,EAAO1D,MACV,KAAKwD,EACD,OAAO,2BACAC,GADP,IAEIxF,KAAMyF,EAAOzF,OAGrB,QACI,OAAOwF,ICkBJE,EA3BD,WAEV,MAAsBrG,IAAtB,yCAAUsG,EAAV,KAYA,OACI,qBAAKzE,UAAU,QAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAKG,IAAI,mEAAmEuE,IAAI,KAChF,qBAAK1E,UAAU,aAAf,SACI,uDAEJ,cAAC2E,EAAA,EAAD,CAAQ9D,KAAK,SAASlB,QAjBrB,WACTvC,EAAKwH,gBAAgBvH,GACnBwH,MAAK,SAAA7B,GAAM,OAAIyB,EAAS,CACd5D,KAAMwD,EACNvF,KAAMkE,EAAOlE,UAEvBgG,OAAM,SAAAC,GAAK,OAAIC,MAAMD,EAAM3E,aAWrB,uCCuBD6E,MA3Cf,WAGE,MAA2B9G,IAA3B,mBAAQW,EAAR,KAAQA,KAYR,OAZA,KAEAC,qBAAU,WACLD,GACD5B,EAAG8B,WAAW,SAASC,IAAIH,EAAKoG,KAAKC,IAAI,CACvCrG,KAAMA,EAAKiB,MACXqF,MAAOtG,EAAKuG,iBAGf,IAID,qBAAKrF,UAAU,MAAf,SACMlB,EAID,qBAAKkB,UAAU,gBAAf,SACC,eAAC,IAAD,WAEO,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsF,KAAK,iBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,iCAZX,cAAC,EAAD,OCfKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,CAAenI,aJVS,CACxBgB,KAAK,MISsCjB,QAASA,EAApD,SACA,cAAC,EAAD,QAGFqI,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.320cffea.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCYmU-SnsQxAGOpnFFhcR5khqHbo3XH_FI\",\n    authDomain: \"whatsappclone-ba70f.firebaseapp.com\",\n    projectId: \"whatsappclone-ba70f\",\n    storageBucket: \"whatsappclone-ba70f.appspot.com\",\n    messagingSenderId: \"504204411802\",\n    appId: \"1:504204411802:web:7e96ba30cd343b3d0d7023\",\n    measurementId: \"G-HHC2HRPXGP\"\n  };\n\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\n  const db = firebaseApp.firestore(); \n  const auth = firebaseApp.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n  const storage = firebase.storage();\n  const ts = firebase.firestore.FieldValue.serverTimestamp;\n\n\n  \n  export {auth,provider,storage, ts};\n  export default db;","import React, {createContext,useContext,useReducer} from 'react';\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children}) => (\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import React from 'react'\nimport { useState, useEffect } from 'react'\nimport './Chatbar.css'\nimport { Avatar } from '@material-ui/core'\nimport db from './firebase'\nimport { Link} from 'react-router-dom';\n\nimport {useStateValue} from \"./StateProvider\";\n\nfunction Chatbar ({addChat, name, id}) {\n\n       const [messages, setMessages]= useState(\" \")\n       const [seed, setSeed]=useState(\"\")\n       const [{user}, dispatch] = useStateValue();\n\n       useEffect(() => {\n        if(id){\n            db.collection('rooms').doc(id).collection('messages')\n            .orderBy('timestamp','desc').onSnapshot(snapshot => {\n                setMessages(snapshot.docs.map((doc) => doc.data()))\n            })\n        }\n    }, [id]);\n\n\n       useEffect(() => {\n        setSeed(Math.floor(Math.random() * 5000));        \n    }, []);\n \n    const createChat=()=>{\n          const room=user?.displayName;\n          if(room){\n              db.collection('rooms').add({\n                  name: room,\n                  user: user.email\n              })\n          }\n    } \n\n    return !addChat ?(\n\n        <Link to ={`/rooms/${id}`}>\n        <div className='sidebar-chat'>\n               <Avatar  src={`https://avatars.dicebear.com/api/initials/${seed}.svg`}/>\n             <div className={`sidebar-chat-info ${\n              user.email !=='tanvirrezaanik@gmail.com'  && \"hidden\" && \n              user.email !=='jainfariha@gmail.com'  && \"hidden\" &&\n              user.email !=='anikreza22@gmail.com'  && \"hidden-photo\"  &&\n              user.email !=='sagar.alpha@gmail.com'  && \"hidden-photo\" \n            }`}>\n                <h2>  {name}'s Room</h2>\n                <p>{messages[0]?.message}</p>\n             </div>\n                   \n        </div>\n        </Link>\n    ):(\n        <div onClick={createChat} className='sidebar-chat'>\n            <h2> Add New Chat</h2>\n        </div>\n    )\n}\n\nexport default Chatbar\n","import React, {useState, useEffect} from 'react'\nimport './Sidebar.css'\nimport { Avatar, IconButton } from '@material-ui/core'\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport {SearchOutlined} from '@material-ui/icons'\nimport Chatbar from './Chatbar';\nimport db from './firebase'\nimport {useStateValue} from \"./StateProvider\";\n\n\nconst Sidebar = () => {\n\n    const [{user}, dispatch] = useStateValue();\n    const [rooms, setRooms]=useState([])\n\n     \n \n    useEffect(() => {\n         const unsubscribe=db.collection('rooms').onSnapshot(snapshot => (\n            setRooms(snapshot.docs.map(doc => (\n                {\n                    id: doc.id,\n                    data: doc.data(),               \n                }\n            )\n            ))\n        ));\n        \n        return () => {\n            unsubscribe();\n        }\n    },[]); \n   \n    return (\n        <div className='sidebar'>\n            <div className='sidebar-header'>\n               <Avatar src={user.photoURL} />\n               <div className='sidebar-header-right'>\n                   <IconButton>\n                   <DonutLargeIcon/>\n                   </IconButton>\n                   <IconButton>\n                   <ChatIcon/>\n                   </IconButton>\n                   <IconButton>\n                   <MoreVertIcon/>\n                   </IconButton>\n               </div>\n            </div>\n            <div className='sidebar-search'>\n                <div className='sidebar-searchContainer'>\n                     <SearchOutlined/>\n                     <input placeholder=\"start a new chat\" type='text'/>\n                </div>    \n            </div>\n            <div className='sidebar-chatlist'>\n            <Chatbar addChat/>\n                {rooms.map(room=> (\n                    <Chatbar key={room.id} id={room.id} name={room.data.name}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","export default __webpack_public_path__ + \"static/media/as.768863f9.jpg\";","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import React, { useState, useEffect } from \"react\";\nimport \"./Chat.css\";\nimport a from \"./aa.jpg\";\nimport b from \"./as.jpg\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport firebase from \"firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport moment from \"moment\";\nimport { storage, ts } from \"./firebase\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\nimport { useRef } from \"react\";\nimport InputEmoji from \"react-input-emoji\";\n\nconst Chat = () => {\n\n  const inputRef= useRef();  \n  const [{ user }, dispatch] = useStateValue();\n  const [UserInfo, setUserInfo]= useState('') ;\n  const { roomId } = useParams();\n  const [roomName, setRoomName] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [media, setMedia] = useState(\" \");\n  const [mediaUrl, setMediaUrl] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [progress, setProgress] = useState(0);\n  const [input, setInput] = useState(\"\");\n\n  // snapshots Room and messages\n\n  useEffect(() => {\n\n    db.collection(\"rooms\")\n      .doc(roomId)\n      .onSnapshot((snapshot) => {\n        setRoomName(snapshot.data().name);\n      });\n\n    db.collection(\"rooms\")\n      .doc(roomId)\n      .collection(\"messages\")\n      .orderBy(\"timestamp\", \"asc\")\n      .onSnapshot((snapshot) => {\n        setMessages(snapshot.docs.map((doc) => doc.data()));\n      });\n  }, [roomId]);\n\n\n  function usercall(){\n        db.collection('users').doc(user.uid).onSnapshot((snapshot)=>{\n          setUserInfo(snapshot.data().user)\n        }) \n       \n  }\n\n  // sends image to storage\n\n  useEffect(() => {\n  \n\n   \n    if(!mediaUrl) return;\n      \n    storageRef.put(media).on(\n      \"state_changed\",\n      (snap) => {\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n        setProgress(percentage);\n      },\n      (err) => {\n        setError(err);\n      },\n      async () => {\n  \n        db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n          image: mediaUrl,\n          name: user?.displayName,\n        });\n        setMediaUrl(\"\")\n      }\n      \n    );\n   }, [mediaUrl])\n  \n    const storageRef = storage.ref(`images/${media.name}`);\n  \n   \n    //Handle Media File and Texts\n\n  const filehandler = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      let reader = new FileReader();\n\n      await setMedia(file);\n      reader.onloadend = () => {\n        setMediaUrl(reader.result);\n      };\n\n      reader.readAsDataURL(file);\n    } else {\n      setMedia(null);\n      setError(\"Please select an image file\");\n    }\n  };\n   \n\n  \n// Send it to Database\n\n  const send = () => {\n    if(!input) return;\n\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n      message: input,\n      name: user?.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      \n    });\n    setInput(\"\");\n    \n  };\n  \n  return (\n    <div className=\"chat\">\n      <div className=\"chat-header\">\n        <Avatar src={user.photoURL} />\n        <div className=\"chat-header-info\">\n          <h3>{roomName}</h3>\n\n          <p>\n            Last Active .{\" \"}\n            {moment(messages[messages.length - 1]?.timestamp?.toDate())\n              .startOf(\"minute\")\n              .fromNow()}\n          </p>\n        </div>\n        <div className=\"chat-header-right\">\n          <IconButton>\n            <SearchOutlined />\n          </IconButton>\n          <IconButton>\n            <label htmlFor=\"image\">\n              <AttachFile style={{ cursor: \"pointer\" }} />\n              <input\n                type=\"file\"\n                onChange={filehandler}\n                id=\"image\"\n                style={{ display: \"none\" }}\n              />\n            </label>\n          </IconButton>\n          <IconButton>\n            <MoreVert />\n          </IconButton>\n        </div>\n      </div>\n\n            \n             <div className={`chat-body ${\n              user.email !=='tanvirrezaanik@gmail.com'  && \"hidden-photo\" && \n              user.email !=='jainfariha@gmail.com'  && \"hidden-photo\"  &&\n              user.email !=='anikreza22@gmail.com'  && \"hidden-photo\"  &&\n              user.email !=='sagar.alpha@gmail.com'  && \"hidden-photo\" \n            }`}>\n              <div className={`show${\n              user.email ==='tanvirrezaanik@gmail.com'  && \"hidden\" && \n              user.email ==='jainfariha@gmail.com'  && \"hidden\"  &&\n              user.email ==='anikreza22@gmail.com'  && \"hidden\"  &&\n              user.email ==='sagar.alpha@gmail.com'  && \"hidden\" \n            }`}>\n                   <img src={b} width='100%' height='430px'/>\n             </div>\n           {messages.map((message) => (\n          <p\n            className={`message ${\n              message.name === user.displayName && \"reciever\"          \n            }`}\n          >\n            \n            {message.message} <img className=\"media\" src={message.image} />\n            <span className=\"sender-name\"> {message.name} </span>\n            <span className='emoti'> {message.emoti} </span>\n            <span className=\"timestamp\">\n              {moment(messages.timestamp?.toDate()).format('LT')}\n            </span>\n          </p>\n        ))}\n      </div>\n\n\n\n      <div className='chat-footer' >\n      <MicIcon />      \n       \n      <InputEmoji\n      value={input}\n      onChange={setInput}\n      cleanOnEnter\n      onEnter={send}\n      placeholder=\"Type a message\"\n      borderRadius='20'\n      />\n\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n","export const initialState = {\n    user:null,\n};\n\nexport const actionTypes = {\n    SET_USER : \"SET_USER\",\n};\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user: action.user,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import React from 'react'\nimport './Login.css'\nimport { Button } from '@material-ui/core';\nimport {auth,provider} from './firebase';\nimport { actionTypes } from './reducer';\nimport {useStateValue} from \"./StateProvider\";\n\n\nconst Login = () => {\n\n    const [{},dispatch] = useStateValue();\n\n   const signIn =() =>{\n        auth.signInWithPopup(provider)\n         .then(result=>  dispatch({\n                    type: actionTypes.SET_USER,\n                    user: result.user,\n                }))\n         .catch(error => alert(error.message))\n        \n   }\n\n    return (\n        <div className='login'>\n            <div className='login-container'>\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \n                <div className=\"login_text\">\n                    <h1>Sign in to Whatsapp</h1>\n                </div>\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat'\nimport Login from './Login'\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\nimport db from './firebase';\n\nfunction App() {\n  \n \n  const [{user}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    if(user){\n      db.collection('users').doc(user.uid).set({\n        user: user.email,\n        token: user.refreshToken \n      })\n    }\n  }, [])\n  \n\n  return (\n    <div className=\"app\"> \n        {!user? (\n          <Login/>\n        ):(\n\n         <div className=\"app-container\">\n          <Router>\n\n                 <Sidebar/>\n                 <Switch>\n                   <Route path=\"/rooms/:roomId\">\n                     <Chat/>\n                   </Route>\n                   <Route path=\"/\">\n                     <h1></h1>\n                   </Route>              \n                 </Switch>            \n           \n            </Router>       \n         </div>\n        )}\n     \n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}