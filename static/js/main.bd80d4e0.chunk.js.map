{"version":3,"sources":["firebase.js","Chatbar.js","StateProvider.js","Sidebar.js","aa.jpg","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","Chatbar","addChat","name","id","useState","messages","setMessages","seed","setSeed","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","room","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","user","rooms","setRooms","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","Chat","roomId","useParams","roomName","setRoomName","input","setInput","console","log","a","moment","length","timestamp","toDate","startOf","fromNow","AttachFile","displayName","Date","toUTCString","onSubmit","e","preventDefault","onChange","target","FieldValue","serverTimestamp","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd80d4e0.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCYmU-SnsQxAGOpnFFhcR5khqHbo3XH_FI\",\r\n    authDomain: \"whatsappclone-ba70f.firebaseapp.com\",\r\n    projectId: \"whatsappclone-ba70f\",\r\n    storageBucket: \"whatsappclone-ba70f.appspot.com\",\r\n    messagingSenderId: \"504204411802\",\r\n    appId: \"1:504204411802:web:7e96ba30cd343b3d0d7023\",\r\n    measurementId: \"G-HHC2HRPXGP\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore(); \r\n  const auth = firebaseApp.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth,provider};\r\n  export default db;","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport './Chatbar.css'\r\nimport { Avatar } from '@material-ui/core'\r\nimport db from './firebase'\r\nimport { Link} from 'react-router-dom';\r\n\r\n\r\nfunction Chatbar ({addChat, name, id}) {\r\n\r\n       const [messages, setMessages]= useState(\" \")\r\n       const [seed, setSeed]=useState(\"\")\r\n\r\n\r\n       useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages')\r\n            .orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n\r\n       useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, []);\r\n\r\n    const createChat=()=>{\r\n          const room=prompt(\"add new chat\");\r\n          if(room){\r\n              db.collection('rooms').add({\r\n                  name: room,\r\n              })\r\n          }\r\n    } \r\n\r\n    return !addChat ?(\r\n\r\n        <Link to ={`/rooms/${id}`}>\r\n        <div className='sidebar-chat'>\r\n               <Avatar  src={`https://avatars.dicebear.com/api/micah/${seed}.svg`}/>\r\n             <div className='sidebar-chat-info'>\r\n                <h2>  {name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n             </div>\r\n                   \r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div onClick={createChat} className='sidebar-chat'>\r\n            <h2> Add New Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbar\r\n","import React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useState, useEffect} from 'react'\r\nimport './Sidebar.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport {SearchOutlined} from '@material-ui/icons'\r\nimport Chatbar from './Chatbar';\r\nimport db from './firebase'\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\n    const [{user}, dispatch] = useStateValue();\r\n    const [rooms, setRooms]=useState([])\r\n\r\n     \r\n \r\n    useEffect(() => {\r\n         const unsubscribe=db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }\r\n            )\r\n\r\n            ))\r\n        ));\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[]); \r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar-header'>\r\n               <Avatar src={user.photoURL} />\r\n               <div className='sidebar-header-right'>\r\n                   <IconButton>\r\n                   <DonutLargeIcon/>\r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <ChatIcon/>\r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <MoreVertIcon/>\r\n                   </IconButton>\r\n               </div>\r\n            </div>\r\n            <div className='sidebar-search'>\r\n                <div className='sidebar-searchContainer'>\r\n                     <SearchOutlined/>\r\n                     <input placeholder=\"start a new chat\" type='text'/>\r\n                </div>    \r\n            </div>\r\n            <div className='sidebar-chatlist'>\r\n            <Chatbar addChat/>\r\n                {rooms.map(room=> (\r\n                    <Chatbar key={room.id} id={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import React, {useState, useEffect} from 'react' \r\nimport './Chat.css'\r\nimport a from './aa.jpg'\r\nimport {Avatar, IconButton} from '@material-ui/core';\r\nimport {AttachFile, MoreVert, SearchOutlined} from '@material-ui/icons';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport { useParams} from 'react-router-dom';\r\nimport db from './firebase';\r\nimport firebase from 'firebase';\r\nimport {useStateValue} from \"./StateProvider\";\r\nimport moment from 'moment';\r\n\r\nconst Chat = () => {\r\n    const [{user}, dispatch] = useStateValue();\r\n\r\n    const {roomId} =useParams();\r\n    const [roomName, setRoomName]=useState(\"\")\r\n    const [messages, setMessages]=useState([])\r\n\r\n    useEffect(() => {\r\n\r\n        db.collection('rooms').doc(roomId).onSnapshot(snapshot => {\r\n            setRoomName(snapshot.data().name);\r\n        });\r\n\r\n        db.collection('rooms').doc(roomId)\r\n        .collection('messages').orderBy('timestamp', 'asc')\r\n        .onSnapshot(snapshot=>{\r\n            setMessages(snapshot.docs.map(doc=>doc.data()))\r\n        })\r\n\r\n  \r\n    }, [roomId])\r\n\r\n\r\n\r\n\r\n\r\n    const  [input,setInput]=useState(\"\")\r\n\r\n    const send=(e)=>{\r\n        e.preventDefault();\r\n            db.collection('rooms').doc(roomId).collection('messages').add({\r\n                message: input,\r\n                name: user?.displayName,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            })\r\n        setInput(\" \")\r\n    }\r\n    console.log(input);\r\n    return (\r\n        <div className='chat'> \r\n             <div className='chat-header'>\r\n                <Avatar src={a}/>\r\n                <div className='chat-header-info'>\r\n                    <h3>{roomName}</h3>\r\n                    <p>Last Seen .{\" \"}\r\n\r\n                      {moment( messages[messages.length - 1]?.\r\n                      timestamp?.toDate()).startOf('minute').fromNow()}\r\n                    </p>\r\n                </div>\r\n                    <div className='chat-header-right'>\r\n                    <IconButton>\r\n                        <SearchOutlined/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <AttachFile/>\r\n                    </IconButton>\r\n                    <IconButton>\r\n                        <MoreVert/>\r\n                    </IconButton>\r\n                    </div>\r\n                \r\n             </div>\r\n             \r\n             \r\n             <div className='chat-body'>\r\n\r\n                 {messages.map(message=>(\r\n                      <p className={`message ${message.name===user.displayName &&'reciever'}`}>\r\n                           {message.message}\r\n                      <span className='sender-name'> {message.name}</span>\r\n                      <span className='timestamp'>          \r\n                           {new Date(\r\n                             message.timestamp?.toDate())\r\n                            .toUTCString()}\r\n                        \r\n                        </span>\r\n                      </p>\r\n                 ))}\r\n                 \r\n             </div>\r\n             \r\n             \r\n             <div className='chat-footer'>\r\n             <InsertEmoticonIcon />\r\n             <form onSubmit={(e)=>e.preventDefault}>\r\n                <input value={input} type=\"text\" placeholder=\"Type a message\"\r\n                 onChange={(e)=>setInput(e.target.value)}/>\r\n\r\n                <button type=\"submit\" onClick={send} > Send a Message</button>\r\n                </form>\r\n                <MicIcon/>\r\n             </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chat\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react'\r\nimport './Login.css'\r\nimport { Button } from '@material-ui/core';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [{},dispatch] = useStateValue();\r\n\r\n   const signIn =() =>{\r\n        auth.signInWithPopup(provider)\r\n         .then(result=>  dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                }))\r\n         .catch(error => alert(error.message))\r\n        \r\n   }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login-container'>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat'\nimport Login from './Login'\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\n\nfunction App() {\n  \n \n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n        {!user? (\n          <Login/>\n        ):(\n\n         <div className=\"app-container\">\n          <Router>\n\n                 <Sidebar/>\n                 <Switch>\n                   <Route path=\"/rooms/:roomId\">\n                     <Chat/>\n                   </Route>\n                   <Route path=\"/\">\n                     <h1></h1>\n                   </Route>              \n                 </Switch>            \n           \n            </Router>       \n         </div>\n        )}\n     \n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}