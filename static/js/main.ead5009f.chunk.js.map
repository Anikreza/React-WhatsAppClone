{"version":3,"sources":["firebase.js","Chatbar.js","StateProvider.js","Sidebar.js","aa.jpg","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","storage","FieldValue","serverTimestamp","Chatbar","addChat","name","id","useState","messages","setMessages","seed","setSeed","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","room","prompt","add","className","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","user","rooms","setRooms","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","Chat","inputRef","useRef","emoti","setEmoti","roomId","useParams","roomName","setRoomName","media","setMedia","mediaUrl","setMediaUrl","setError","setProgress","toggle","setToggle","input","setInput","storageRef","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","timestamp","image","displayName","ref","filehandler","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","moment","length","toDate","startOf","fromNow","htmlFor","AttachFile","style","cursor","onChange","display","format","width","marginRight","prev","onEmojiClick","emotiobj","console","log","current","defaultValue","skinTone","SKIN_TONE_MEDIUM_DARK","emoji","onSubmit","preventDefault","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","catch","error","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ead5009f.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCYmU-SnsQxAGOpnFFhcR5khqHbo3XH_FI\",\r\n    authDomain: \"whatsappclone-ba70f.firebaseapp.com\",\r\n    projectId: \"whatsappclone-ba70f\",\r\n    storageBucket: \"whatsappclone-ba70f.appspot.com\",\r\n    messagingSenderId: \"504204411802\",\r\n    appId: \"1:504204411802:web:7e96ba30cd343b3d0d7023\",\r\n    measurementId: \"G-HHC2HRPXGP\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore(); \r\n  const auth = firebaseApp.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  const storage = firebase.storage();\r\n  const ts = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n\r\n  \r\n  export {auth,provider,storage, ts};\r\n  export default db;","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport './Chatbar.css'\r\nimport { Avatar } from '@material-ui/core'\r\nimport db from './firebase'\r\nimport { Link} from 'react-router-dom';\r\n\r\n\r\nfunction Chatbar ({addChat, name, id}) {\r\n\r\n       const [messages, setMessages]= useState(\" \")\r\n       const [seed, setSeed]=useState(\"\")\r\n\r\n\r\n       useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages')\r\n            .orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n\r\n       useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, []);\r\n\r\n    const createChat=()=>{\r\n          const room=prompt(\"add new chat\");\r\n          if(room){\r\n              db.collection('rooms').add({\r\n                  name: room,\r\n              })\r\n          }\r\n    } \r\n\r\n    return !addChat ?(\r\n\r\n        <Link to ={`/rooms/${id}`}>\r\n        <div className='sidebar-chat'>\r\n               <Avatar  src={`https://avatars.dicebear.com/api/initials/${seed}.svg`}/>\r\n             <div className='sidebar-chat-info'>\r\n                <h2>  {name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n             </div>\r\n                   \r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div onClick={createChat} className='sidebar-chat'>\r\n            <h2> Add New Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbar\r\n","import React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React, {useState, useEffect} from 'react'\r\nimport './Sidebar.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport {SearchOutlined} from '@material-ui/icons'\r\nimport Chatbar from './Chatbar';\r\nimport db from './firebase'\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\n    const [{user}, dispatch] = useStateValue();\r\n    const [rooms, setRooms]=useState([])\r\n\r\n     \r\n \r\n    useEffect(() => {\r\n         const unsubscribe=db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data()\r\n                }\r\n            )\r\n\r\n            ))\r\n        ));\r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[]); \r\n\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar-header'>\r\n               <Avatar src={user.photoURL} />\r\n               <div className='sidebar-header-right'>\r\n                   <IconButton>\r\n                   <DonutLargeIcon/>\r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <ChatIcon/>\r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <MoreVertIcon/>\r\n                   </IconButton>\r\n               </div>\r\n            </div>\r\n            <div className='sidebar-search'>\r\n                <div className='sidebar-searchContainer'>\r\n                     <SearchOutlined/>\r\n                     <input placeholder=\"start a new chat\" type='text'/>\r\n                </div>    \r\n            </div>\r\n            <div className='sidebar-chatlist'>\r\n            <Chatbar addChat/>\r\n                {rooms.map(room=> (\r\n                    <Chatbar key={room.id} id={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport a from \"./aa.jpg\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport moment from \"moment\";\r\nimport { storage, ts } from \"./firebase\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\nimport { useRef } from \"react\";\r\n\r\nconst Chat = () => {\r\n\r\n  const inputRef= useRef();  \r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [emoti, setEmoti]= useState([]); \r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [media, setMedia] = useState(\" \");\r\n  const [mediaUrl, setMediaUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [toggle, setToggle]=useState('true')\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // sets Room and messages\r\n\r\n  useEffect(() => {\r\n    db.collection(\"rooms\")\r\n      .doc(roomId)\r\n      .onSnapshot((snapshot) => {\r\n        setRoomName(snapshot.data().name);\r\n      });\r\n\r\n    db.collection(\"rooms\")\r\n      .doc(roomId)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(snapshot.docs.map((doc) => doc.data()));\r\n      });\r\n  }, [roomId]);\r\n\r\n\r\n  // sends image to storage\r\n\r\n  useEffect(() => {\r\n  \r\n    if(!mediaUrl) return;\r\n      \r\n    storageRef.put(media).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n  \r\n        db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          image: mediaUrl,\r\n          name: user?.displayName,\r\n        });\r\n        setMediaUrl(\"\")\r\n      }\r\n      \r\n    );\r\n   }, [mediaUrl])\r\n  \r\n    const storageRef = storage.ref(`images/${media.name}`);\r\n  \r\n   \r\n    //Handle Media File and Texts\r\n\r\n  const filehandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      let reader = new FileReader();\r\n\r\n      await setMedia(file);\r\n      reader.onloadend = () => {\r\n        setMediaUrl(reader.result);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setMedia(null);\r\n      setError(\"Please select an image file\");\r\n    }\r\n  };\r\n   //Handle Emoji \r\n\r\n   const toggler =()=>{\r\n    setToggle((prev)=> !prev);\r\n  }\r\n\r\n  const onEmojiClick = (e, emotiobj) => {\r\n    setEmoti(emotiobj); \r\n    console.log(inputRef.current.defaultValue)\r\n } \r\n\r\n// Send it to Database\r\n\r\n  const send = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user?.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      emoti: emoti.emoji,\r\n    });\r\n    setInput(\"\");\r\n    setEmoti('');\r\n  };\r\n  \r\n \r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat-header\">\r\n        <Avatar src={a} />\r\n        <div className=\"chat-header-info\">\r\n          <h3>{roomName}</h3>\r\n\r\n          <p>\r\n            Last Active .{\" \"}\r\n            {moment(messages[messages.length - 1]?.timestamp?.toDate())\r\n              .startOf(\"minute\")\r\n              .fromNow()}\r\n          </p>\r\n        </div>\r\n        <div className=\"chat-header-right\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <label htmlFor=\"image\">\r\n              <AttachFile style={{ cursor: \"pointer\" }} />\r\n              <input\r\n                type=\"file\"\r\n                onChange={filehandler}\r\n                id=\"image\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </label>\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`message ${\r\n              message.name === user.displayName && \"reciever\"\r\n            }`}\r\n          >\r\n            \r\n            {message.message} <img className=\"media\" src={message.image} />\r\n            <span className=\"sender-name\"> {message.name} </span>\r\n            <span className='emoti'> {message.emoti} </span>\r\n            <span className=\"timestamp\">\r\n              {moment(messages.timestamp?.toDate()).format('LT')}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n\r\n\r\n      <div className='chat-footer' >\r\n        <InsertEmoticonIcon style={{cursor:'pointer', width:'40px', marginRight:'-15px'}} onClick={toggler} />\r\n\r\n        <div className={toggle ? 'hidden' :'active' }>\r\n        <Picker  onEmojiClick={onEmojiClick} skinTone={SKIN_TONE_MEDIUM_DARK}/>\r\n        </div>\r\n        \r\n         {emoti.emoji} \r\n                \r\n        <form onSubmit={(e) => e.preventDefault}>\r\n          <input\r\n            className='text-input'\r\n            value={input}\r\n            type=\"text\"\r\n            placeholder=\"Type a message\" \r\n            onChange={(e) => setInput(e.target.value)}\r\n          />\r\n           \r\n          <input ref={inputRef} \r\n             className='emotibox'\r\n             id='emo'\r\n             type='text'\r\n             onChange={e => setEmoti([...emoti, e.target.value])} \r\n                \r\n          />\r\n          \r\n          <button type=\"submit\"  onClick={send}>send The Message</button>\r\n        </form>\r\n\r\n        <MicIcon />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react'\r\nimport './Login.css'\r\nimport { Button } from '@material-ui/core';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [{},dispatch] = useStateValue();\r\n\r\n   const signIn =() =>{\r\n        auth.signInWithPopup(provider)\r\n         .then(result=>  dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                }))\r\n         .catch(error => alert(error.message))\r\n        \r\n   }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login-container'>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useState} from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat'\nimport Login from './Login'\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\n\nfunction App() {\n  \n \n  const [{user}, dispatch] = useStateValue();\n\n  return (\n    <div className=\"app\">\n        {!user? (\n          <Login/>\n        ):(\n\n         <div className=\"app-container\">\n          <Router>\n\n                 <Sidebar/>\n                 <Switch>\n                   <Route path=\"/rooms/:roomId\">\n                     <Chat/>\n                   </Route>\n                   <Route path=\"/\">\n                     <h1></h1>\n                   </Route>              \n                 </Switch>            \n           \n            </Router>       \n         </div>\n        )}\n     \n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}