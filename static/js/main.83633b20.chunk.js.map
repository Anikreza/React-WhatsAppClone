{"version":3,"sources":["firebase.js","StateProvider.js","Chatbar.js","Sidebar.js","aa.jpg","Chat.js","reducer.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","provider","GoogleAuthProvider","storage","FieldValue","serverTimestamp","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Chatbar","addChat","name","id","useState","messages","setMessages","seed","setSeed","user","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","onClick","room","prompt","add","email","className","to","Avatar","src","message","Sidebar","rooms","setRooms","unsubscribe","photoURL","IconButton","SearchOutlined","placeholder","type","Chat","useRef","roomId","useParams","roomName","setRoomName","media","setMedia","mediaUrl","setMediaUrl","setError","setProgress","input","setInput","storageRef","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","timestamp","image","displayName","ref","filehandler","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","moment","length","toDate","startOf","fromNow","htmlFor","AttachFile","style","cursor","onChange","display","emoti","format","cleanOnEnter","onEnter","borderRadius","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","catch","error","alert","App","uid","set","token","refreshToken","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83633b20.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCYmU-SnsQxAGOpnFFhcR5khqHbo3XH_FI\",\r\n    authDomain: \"whatsappclone-ba70f.firebaseapp.com\",\r\n    projectId: \"whatsappclone-ba70f\",\r\n    storageBucket: \"whatsappclone-ba70f.appspot.com\",\r\n    messagingSenderId: \"504204411802\",\r\n    appId: \"1:504204411802:web:7e96ba30cd343b3d0d7023\",\r\n    measurementId: \"G-HHC2HRPXGP\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig);\r\n  const db = firebaseApp.firestore(); \r\n  const auth = firebaseApp.auth();\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n  const storage = firebase.storage();\r\n  const ts = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\n\r\n  \r\n  export {auth,provider,storage, ts};\r\n  export default db;","import React, {createContext,useContext,useReducer} from 'react';\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children}) => (\r\n    <StateContext.Provider value={useReducer(reducer,initialState)}>\r\n        {children}\r\n    </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport './Chatbar.css'\r\nimport { Avatar } from '@material-ui/core'\r\nimport db from './firebase'\r\nimport { Link} from 'react-router-dom';\r\n\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\nfunction Chatbar ({addChat, name, id}) {\r\n\r\n       const [messages, setMessages]= useState(\" \")\r\n       const [seed, setSeed]=useState(\"\")\r\n       const [{user}, dispatch] = useStateValue();\r\n\r\n       useEffect(() => {\r\n        if(id){\r\n            db.collection('rooms').doc(id).collection('messages')\r\n            .orderBy('timestamp','desc').onSnapshot(snapshot => {\r\n                setMessages(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n    }, [id]);\r\n\r\n\r\n       useEffect(() => {\r\n        setSeed(Math.floor(Math.random() * 5000));        \r\n    }, []);\r\n\r\n    const createChat=()=>{\r\n          const room=prompt(\"add new chat\");\r\n          if(room){\r\n              db.collection('rooms').add({\r\n                  name: room,\r\n                  user: user.email\r\n              })\r\n          }\r\n    } \r\n\r\n    return !addChat ?(\r\n\r\n        <Link to ={`/rooms/${id}`}>\r\n        <div className='sidebar-chat'>\r\n               <Avatar  src={`https://avatars.dicebear.com/api/initials/${seed}.svg`}/>\r\n             <div className='sidebar-chat-info'>\r\n                <h2>  {name}</h2>\r\n                <p>{messages[0]?.message}</p>\r\n             </div>\r\n                   \r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div onClick={createChat} className='sidebar-chat'>\r\n            <h2> Add New Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chatbar\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Sidebar.css'\r\nimport { Avatar, IconButton } from '@material-ui/core'\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat'\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\r\nimport {SearchOutlined} from '@material-ui/icons'\r\nimport Chatbar from './Chatbar';\r\nimport db from './firebase'\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\n    const [{user}, dispatch] = useStateValue();\r\n    const [rooms, setRooms]=useState([])\r\n\r\n     \r\n \r\n    useEffect(() => {\r\n         const unsubscribe=db.collection('rooms').onSnapshot(snapshot => (\r\n            setRooms(snapshot.docs.map(doc => (\r\n                {\r\n                    id: doc.id,\r\n                    data: doc.data(),               \r\n                }\r\n            )\r\n            ))\r\n        ));\r\n        \r\n        return () => {\r\n            unsubscribe();\r\n        }\r\n    },[]); \r\n   \r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar-header'>\r\n               <Avatar src={user.photoURL} />\r\n               <div className='sidebar-header-right'>\r\n                   <IconButton>\r\n                   <DonutLargeIcon/>\r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <ChatIcon/>\r\n                   </IconButton>\r\n                   <IconButton>\r\n                   <MoreVertIcon/>\r\n                   </IconButton>\r\n               </div>\r\n            </div>\r\n            <div className='sidebar-search'>\r\n                <div className='sidebar-searchContainer'>\r\n                     <SearchOutlined/>\r\n                     <input placeholder=\"start a new chat\" type='text'/>\r\n                </div>    \r\n            </div>\r\n            <div className='sidebar-chatlist'>\r\n            <Chatbar addChat/>\r\n                {rooms.map(room=> (\r\n                    <Chatbar key={room.id} id={room.id} name={room.data.name}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","export default __webpack_public_path__ + \"static/media/aa.14327386.jpg\";","import React, { useState, useEffect } from \"react\";\r\nimport \"./Chat.css\";\r\nimport a from \"./aa.jpg\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport { AttachFile, MoreVert, SearchOutlined } from \"@material-ui/icons\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport moment from \"moment\";\r\nimport { storage, ts } from \"./firebase\";\r\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\r\nimport Picker, { SKIN_TONE_MEDIUM_DARK } from 'emoji-picker-react';\r\nimport { useRef } from \"react\";\r\nimport InputEmoji from \"react-input-emoji\";\r\n\r\nconst Chat = () => {\r\n\r\n  const inputRef= useRef();  \r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [UserInfo, setUserInfo]= useState('') ;\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [media, setMedia] = useState(\" \");\r\n  const [mediaUrl, setMediaUrl] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // snapshots Room and messages\r\n\r\n  useEffect(() => {\r\n\r\n    db.collection(\"rooms\")\r\n      .doc(roomId)\r\n      .onSnapshot((snapshot) => {\r\n        setRoomName(snapshot.data().name);\r\n      });\r\n\r\n    db.collection(\"rooms\")\r\n      .doc(roomId)\r\n      .collection(\"messages\")\r\n      .orderBy(\"timestamp\", \"asc\")\r\n      .onSnapshot((snapshot) => {\r\n        setMessages(snapshot.docs.map((doc) => doc.data()));\r\n      });\r\n  }, [roomId]);\r\n\r\n\r\n  function usercall(){\r\n        db.collection('users').doc(user.uid).onSnapshot((snapshot)=>{\r\n          setUserInfo(snapshot.data().user)\r\n        }) \r\n       \r\n  }\r\n\r\n  // sends image to storage\r\n\r\n  useEffect(() => {\r\n  \r\n\r\n   \r\n    if(!mediaUrl) return;\r\n      \r\n    storageRef.put(media).on(\r\n      \"state_changed\",\r\n      (snap) => {\r\n        let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n        setProgress(percentage);\r\n      },\r\n      (err) => {\r\n        setError(err);\r\n      },\r\n      async () => {\r\n  \r\n        db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          image: mediaUrl,\r\n          name: user?.displayName,\r\n        });\r\n        setMediaUrl(\"\")\r\n      }\r\n      \r\n    );\r\n   }, [mediaUrl])\r\n  \r\n    const storageRef = storage.ref(`images/${media.name}`);\r\n  \r\n   \r\n    //Handle Media File and Texts\r\n\r\n  const filehandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      let reader = new FileReader();\r\n\r\n      await setMedia(file);\r\n      reader.onloadend = () => {\r\n        setMediaUrl(reader.result);\r\n      };\r\n\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      setMedia(null);\r\n      setError(\"Please select an image file\");\r\n    }\r\n  };\r\n   \r\n\r\n  \r\n// Send it to Database\r\n\r\n  const send = () => {\r\n    if(!input) return;\r\n\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user?.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      \r\n    });\r\n    setInput(\"\");\r\n    \r\n  };\r\n  \r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat-header\">\r\n        <Avatar src={a} />\r\n        <div className=\"chat-header-info\">\r\n          <h3>{roomName}</h3>\r\n\r\n          <p>\r\n            Last Active .{\" \"}\r\n            {moment(messages[messages.length - 1]?.timestamp?.toDate())\r\n              .startOf(\"minute\")\r\n              .fromNow()}\r\n          </p>\r\n        </div>\r\n        <div className=\"chat-header-right\">\r\n          <IconButton>\r\n            <SearchOutlined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <label htmlFor=\"image\">\r\n              <AttachFile style={{ cursor: \"pointer\" }} />\r\n              <input\r\n                type=\"file\"\r\n                onChange={filehandler}\r\n                id=\"image\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </label>\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat-body\">\r\n        {messages.map((message) => (\r\n          <p\r\n            className={`message ${\r\n              message.name === user.displayName && \"reciever\"\r\n            }`}\r\n          >\r\n            \r\n            {message.message} <img className=\"media\" src={message.image} />\r\n            <span className=\"sender-name\"> {message.name} </span>\r\n            <span className='emoti'> {message.emoti} </span>\r\n            <span className=\"timestamp\">\r\n              {moment(messages.timestamp?.toDate()).format('LT')}\r\n            </span>\r\n          </p>\r\n        ))}\r\n      </div>\r\n\r\n\r\n\r\n      <div className='chat-footer' >\r\n      <MicIcon />      \r\n       \r\n      <InputEmoji\r\n      value={input}\r\n      onChange={setInput}\r\n      cleanOnEnter\r\n      onEnter={send}\r\n      placeholder=\"Type a message\"\r\n      borderRadius='20'\r\n      />\r\n\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n","export const initialState = {\r\n    user:null,\r\n};\r\n\r\nexport const actionTypes = {\r\n    SET_USER : \"SET_USER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react'\r\nimport './Login.css'\r\nimport { Button } from '@material-ui/core';\r\nimport {auth,provider} from './firebase';\r\nimport { actionTypes } from './reducer';\r\nimport {useStateValue} from \"./StateProvider\";\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [{},dispatch] = useStateValue();\r\n\r\n   const signIn =() =>{\r\n        auth.signInWithPopup(provider)\r\n         .then(result=>  dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user,\r\n                }))\r\n         .catch(error => alert(error.message))\r\n        \r\n   }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login-container'>\r\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/6/6b/WhatsApp.svg\" alt=\"\"/> \r\n                <div className=\"login_text\">\r\n                    <h1>Sign in to Whatsapp</h1>\r\n                </div>\r\n                <Button type=\"submit\" onClick={signIn}>Sign in With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat'\nimport Login from './Login'\nimport { BrowserRouter as Router,Switch, Route} from 'react-router-dom';\nimport {useStateValue} from './StateProvider';\nimport db from './firebase';\n\nfunction App() {\n  \n \n  const [{user}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    if(user){\n      db.collection('users').doc(user.uid).set({\n        user: user.email,\n        token: user.refreshToken \n      })\n    }\n  }, [])\n  \n\n  return (\n    <div className=\"app\"> \n        {!user? (\n          <Login/>\n        ):(\n\n         <div className=\"app-container\">\n          <Router>\n\n                 <Sidebar/>\n                 <Switch>\n                   <Route path=\"/rooms/:roomId\">\n                     <Chat/>\n                   </Route>\n                   <Route path=\"/\">\n                     <h1></h1>\n                   </Route>              \n                 </Switch>            \n           \n            </Router>       \n         </div>\n        )}\n     \n          \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer,{initialState} from './reducer';\nimport {StateProvider} from './StateProvider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}